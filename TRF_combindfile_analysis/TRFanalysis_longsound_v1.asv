% TRFanalysis_longsound %%% 
% - analyse mTRF of combined EEG data and wav files
%
% required Add-ons
% - mTRF Toolbox
% - 
% required functions
% - 
% required setting files
% - 
% 
% v1  
% 06/08/2023 longer (conbined) file 


%%%%%%%%%!!check!!%%%%%%%%%%%
%%% name, tgArray, fpass

clearvars; close all;

path_folder = "../"; %parent folder 
addpath path_folder

%% parameters
%%%get folder name
inputfolder  = '../../02_EEGanalysis/subject/';
folders = struct2table(dir('../../02_EEGanalysis/subject/s*'));
prompt = 'Chose folder name:';  % prompt message
[foldInd,tf] = listdlg('PromptString',prompt,'SelectionMode','single','ListSize',[400 750],'ListString',folders.name); % option selection window
experiment_name = folders.name{foldInd,:}; %subject (experiment) name
outfolder =  sprintf('subject/%s/', experiment_name); %name of the output folder containing the subject's data 
if ~exist(outfolder, 'dir') %check folder existance
    mkdir(outfolder) %make directory
end

%%% get filenames
fnameMsk = ls(strcat(inputfolder, experiment_name, '/step3_epochs_Msk_*')); %Masker based epoched EEG data file name with its path
fnameMsk = fnameMsk(1:end-1); %remove unnecessary character
% fnameTgt = strcat(inputfolder, experiment_name, '/step3_epochs_Tgt_', experiment_name, '_ICAprocessedAfterRejections.mat'); %Target based epoched EEG data file name with its path
titlename = strrep(experiment_name, '_', ' '); %name for figure title (replased '_' to blank)
disp(['Processing: ' experiment_name]) %make sure the processing data

%%% get behavioral data
resfile = ls([inputfolder experiment_name '/res*']);
load(resfile(1:end-1)); %participant's responces
tgArray= table2array(res(:,12)); %extract answer section

% filter settings
fpass = [1.5 20]; %frequency of low/hi cut (Hz)
fsFilt = 230; %order of filtering

% trial information
Cols = ["blue", "red", "white", "green"]; %color variations
Nums = 1:8; %number variations
SNRs = [-12 -18]; %signal noise ratio variations
Spat = ["front", "back"]; %spatial pattern variations

numCols = length(Cols); %number of color variety
numNums = length(Nums); %number of number variety
numSNRs = length(SNRs); %number of SNR variety
numSpat = length(SNRs); %number of Spatial pattern variety

baselinedur = 0.3; %duration of baseline (sec)
shorteststs = 1.5; %minimum target start time (sec)
targetdur   = 2.8; %target duration (sec)

fsEEG=256; %sampling rate for EEG (already resampled)
fsSound=48000; %sampling rate for the sound
fsmTRF=256; %sampling rate for mTRF

MskSound_filename = '../../01_OriginalData/Sounddata/maskers/testmasker0528.wav'; %filename of Masker sound
d_fifo  = 9.9; %duration of fadein/fadeout (msec) - following experiment setting (makestimulus)
OvlpDur = 0.1; %duration of overlapping on CrossFader (sec)

%% trigger values
TgGrand= 250; %grand start/end
TgMsk  = 240; %masker onset
TgTgt  = 230; %target onset
TgOff  = 220; %stream offset
TgAuth = [200 201]; %authenticity (correct/incorrect)
TgCAns = [060 098 160 198]; %correct answer (161 - 198)
TgIAns = [110 149]; %input answer (111 - 148)
TgSNR  = [100 105]; %SNR pattern (-12/-18)
TgSpt  = [106 109]; %Spatial pattern (front/back)

%% load MASKER based file
load(fnameMsk) %load Masker based EEG
numChMsk = size(epochs_Gd,2); %number of channels on masker

%% common parameters

OstCAns = tgArray(:,1); %index of correct answer (161 - 198)
OstIAns = tgArray(:,2); %index of input answer (111 - 148)
OstAuth = tgArray(:,3); %index of authenticity (correct/incorrect)
OstSpt  = tgArray(:,4); %index of Spatial pattern (front/back)
OstSNR  = tgArray(:,5); %index of SNR pattern (-12/-18)
target  = res.StimulusCharactor; %target
StTime  = res.StartTime; %start time

%% make index

    % 4...Fz
    % 8...Cz
    % 12..Pz (DSI-24>No Pz)
    % 14..O1
    % 16..O2 (DSI-24>15..O2)
if size(epochs_Gd,2)+length(BadChannels) == 20 %DSI-24
    disp('Device: DSI-24')
    Hotch = [4 8]; % Fz and Cz
    Coldch = [14 15]; % O1 and O2
else %Biosemi
    disp('Device: Biosemi')
    Hotch = [4 8]; % Fz and Cz
    Coldch = [14 16]; % O1 and O2
end

ch1 = 'Fz';
ch2 = 'Cz';

streamdur = round(fsEEG*(baselinedur+shorteststs)); %plot stream duration
OstSptMsk = OstSpt(GdTr_final); %spatial pattern on masker of good trials

spat_ind = 1; %index of spatial pattern

%%% front %%% 
ind_Gd_Spat = intersect(GdTr_final, find(OstSpt==TgSpt(spat_ind))); %index of GoodTrial AND Front/BackPosition
SNRs_PosFront = OstSNR(indFront); %SNRs of front/back
numTrialFront = length(indFront); %number of good front trials
targetFront = target(indFront); %targets of good front trials
StTimeFront = StTime(indFront); %startime of good front trials

%sound
MskSound_original = audioread(MskSound_filename); %read masker sound in full range 
MskSound = [zeros(round(fsSound*baselinedur),1); fadein(d_fifo, MskSound_original(1:shorteststs*fsSound), fsSound)]; %extact masker sound with fade-in and add baseline (zero)
stim_comb_Front = MskSound; %combined stimulus (initialization)

for i = 1:numTrialFront-1
    stim_comb_Front = CrossFader(stim_comb_Front, MskSound, OvlpDur*fsSound); %combine stimuli
end

%EEG
epochs_PosFront = resample(double(epochs_Gd(1:streamdur,1:numChMsk,OstSpt(GdTr_final)==TgSpt(spat_ind))),fsSound,fsEEG); %epochs of front/back and resample to adjust the length
epochs_PosFront = epochs_PosFront(1:size(MskSound,1),:,:); %adjust the length (the gap between EEG and sound (7.9167e-04 sec) is small as possible to be ignored)
epochs_PosFront_referred = epochs_PosFront(:,[Hotch(1) Hotch(2)],:) - (epochs_PosFront(:,[Coldch(1) Coldch(2)],:) + epochs_PosFront(:,[Coldch(2) Coldch(1)],:))/2; %refer O1 and O2
EEG_comb_Fz = epochs_PosFront_referred(:,1,1); %combined EEG signals (initialization) for Fz
EEG_comb_Cz = epochs_PosFront_referred(:,2,1); %combined EEG signals (initialization) for Cz

for i = 1:numTrialFront-1
    EEG_comb_Fz = CrossFader(EEG_comb_Fz, epochs_PosFront_referred(:,1,i+1), OvlpDur*fsSound); %combine EEG signals
    EEG_comb_Cz = CrossFader(EEG_comb_Cz, epochs_PosFront_referred(:,2,i+1), OvlpDur*fsSound);
end

%% make a model

model_Fz = TRFanalysis_v3_function(EEG_comb_Fz, stim_comb, fsSound, fsSound, fsmTRF);
model_Cz = TRFanalysis_v3_function(EEG_comb_Cz, stim_comb, fsSound, fsSound, fsmTRF);

%% Plot figure 

%%% Fz %%%
% Plot STRF
figure
subplot(2,2,1), mTRFplot(model_Fz,'mtrf','all',chan,[-50,350]);
title(sprintf('Speech STRF (%s)', Chls{chan})), ylabel('Frequency band'), xlabel('')

% Plot GFP
subplot(2,2,2), mTRFplot(model_Fz,'mgfp','all','all',[-50,350]);
title('Global Field Power'), xlabel('')

% Plot TRF
subplot(2,2,3), mTRFplot(model_Fz,'trf','all',chan,[-50,350]);
title(sprintf('Speech TRF (%s)', Chls{chan})), ylabel('Amplitude (a.u.)')

% Plot GFP
subplot(2,2,4), mTRFplot(model_Fz,'gfp','all','all',[-50,350]);
title('Global Field Power')

figtitle = sprintf('TRF %s Spat:%s Ch:%sf', experiment_name, Spat(i), Ch1);
sgtitle(figtitle)
pdfname = sprintf('%s/TRF_%s_Sp%s_Ch%s.pdf', outfolder, experiment_name, Spat(i), Ch1);
saveas(gcf, pdfname)

%%% Cz %%%
% Plot STRF
figure
subplot(2,2,1), mTRFplot(model_Cz,'mtrf','all',chan,[-50,350]);
title(sprintf('Speech STRF (%s)', Chls{chan})), ylabel('Frequency band'), xlabel('')

% Plot GFP
subplot(2,2,2), mTRFplot(model_Cz,'mgfp','all','all',[-50,350]);
title('Global Field Power'), xlabel('')

% Plot TRF
subplot(2,2,3), mTRFplot(model_Cz,'trf','all',chan,[-50,350]);
title(sprintf('Speech TRF (%s)', Chls{chan})), ylabel('Amplitude (a.u.)')

% Plot GFP
subplot(2,2,4), mTRFplot(model_Cz,'gfp','all','all',[-50,350]);
title('Global Field Power')

figtitle = sprintf('TRF %s Spat:%s Ch:%sf', experiment_name, Spat(i), Ch2);
sgtitle(figtitle)
pdfname = sprintf('%s/TRF_%s_Sp%s_Ch%s.pdf', outfolder, experiment_name, Spat(i), Ch2);
saveas(gcf, pdfname)

