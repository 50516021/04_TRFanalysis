%%% Spatial Attention EEG analysis for BDF/EDF/CSV - step 4 %%% 
%%% - evoked responce
%%%
%%% required Add-ons
%%% - 
%%% - 
%%% required functions
%%% - makestimulus_mTRF_v1.m
%%% - StimTrans_mTRF_v1.m
%%% - TRFestimation_v1.m
%%%
%%% required setting files
%%% - 

%%% v1  
%%% 2023/09/21 

clearvars; 
close all;

addpath('../'); %add path above
addpath('../../02_EEGanalysis'); %add path of EEGanalysis

%% parameters
%%%get folder name
folders = struct2table(dir('subject/s*'));
prompt = 'Choose folder name:';  % prompt message
[foldInd,tf] = listdlg('PromptString',prompt,'SelectionMode','single','ListSize',[400 750],'ListString',folders.name); % option selection window
experiment_name = folders.name{foldInd,:}; %subject (experiment) name
outfolder =  sprintf('subject/%s/', experiment_name); %name of the output folder containing the subject's data 
outfolder_mTRF = strcat(outfolder, 'mTRF_fig/');
mkdir(outfolder_mTRF)

%%% get filenames
EEGfile = ls([outfolder, 'step1_*']); %find responce file
EEGfile = EEGfile(1:end-1); %extract unnecessary charactar
load(EEGfile); %participant's responces

%% stimulus preparation

stimulus = stimGen(path_Tgt, timerange_Tgt, path_Msk, timerange_Msk);
stimulus(:,3) = stimulus(:,1) + stimulus(:,2); %mixed stimulus

%% data preparation

FstSpeaker = ["Male", "Female"]; %first speaker identification
stim_tag = ["Target", "Masker", "Mixed"]; 

%%% chanel info
ch1 = 'Fz';
ch2 = 'Cz';

%%% stimuli info

fs_Sound = 48000;

for j =1:size(stimulus,2)
    disp('%%% begin stimuli conversion %%%')
    stim = StimTrans_mTRF_v1(stimulus(:,j), fs_Sound);
    disp('conversion done')
    
    %%% mTRF estimation
    
    TRFestimation_v1(stim, fs_Sound, EEG, fs_EEG)
    
    sgtitle(sprintf('mTRF stimulus: %s', stim_tag(j)))
    filename = sprintf('%smTRF_%s.pdf', stim_tag(j));
    saveas(gcf, filename)

end


%% stimulus preparation function %%%
function stimulus = stimGen(path_Tgt, timerange_Tgt, path_Msk, timerange_Msk)

    d_fifo = 10; %duration of fadein/fadeout (ms)
    
    disp('preparing stimuli')
    [wavTgt_raw, fs_t] = audioread(path_Tgt); % read Target file
    [wavMsk_raw, fs_m] = audioread(path_Msk); % read Masker file
    
    dur_Tgt = timerange_Tgt(2) - timerange_Tgt(1);
    dur_Msk = timerange_Msk(2) - timerange_Msk(1);
    
    if dur_Tgt < dur_Msk
        wavTgt = wavTgt_raw(timerange_Tgt(1)*fs_t+1 : timerange_Tgt(2)*fs_t);
        wavMsk = wavMsk_raw(timerange_Msk(1)*fs_t+1 : (timerange_Msk(1)+dur_Tgt)*fs_t);
    else
        wavTgt = wavTgt_raw(timerange_Tgt(1)*fs_t+1 : timerange_Tgt(2)*fs_t);
        wavMsk = [wavMsk_raw(timerange_Msk(1)*fs_t+1 : timerange_Msk(2)*fs_t), ...
                    wavMsk_raw(timerange_Msk(1)+1 : (timerange_Msk(1)+dur_Tgt - dur_Msk)*fs_t)];
    end
    
    %%% S/N configuration %%%
    SNR = 0;
    L = rms(wavMsk) * 10^(SNR/20)/ rms(wavTgt); %SNR = 20*log10(rms(target)/rms(masker))
    wavTgt = L* wavTgt; 
    
    wavTgt = fadein(d_fifo, wavTgt, fs_t);
    stimulus(:,1) = fadeout(d_fifo, wavTgt, fs_t);
    wavMsk = fadein(d_fifo, wavMsk, fs_t);
    stimulus(:,2) = fadeout(d_fifo, wavMsk, fs_t);
    
    disp('finish stimuli preparation')

end
