%%% gif_generation v1 %%% 
%%% - TRF caricuration for individuals
%%%
%%% required Add-ons
%%% - 
%%% - 
%%% required functions
%%% - 
%%%
%%% required setting files
%%% - 

%%% v1  
%%% 20240410 gif genartion for short term TRF generated by step6-v5

clearvars;
close all;

%% parameters

Hotch  = [4 8]; % Fz and Cz (don't change after removing cold channels)
numHotCh = length(Hotch);   
stim_tag = ["Left", "Right"]; 

%% file info
%example: step6_v5_shortTRF_ICA_refA1A2_s00068_20231121_mTRFpilot_v401_d180gap10.mat

%%%get folder name
folders = struct2table(dir('subject/s*'));
prompt = 'Choose folder name:';  % prompt message
[foldInd,tf] = listdlg('PromptString',prompt,'SelectionMode','single','ListSize',[400 750],'ListString',folders.name); % option selection window
experiment_name = folders.name{foldInd,:}; %subject (experiment) name
outfolder =  sprintf('subject/%s/', experiment_name); %name of the output folder containing the subject's data 

%%%choose file to process 
files = struct2table(dir([outfolder, 'step6_v5_shortTRF_*']));
prompt = 'Choose file name:';  % prompt message
[fileInd,tf] = listdlg('PromptString',prompt,'SelectionMode','single','ListSize',[600 400],'ListString',files.name); % option selection window
file_path = strcat(outfolder, files.name{fileInd,:}); %subject (experiment) name
file_name = extractBefore(files.name{fileInd,:}, '.mat');

outfolder_gif = strcat(outfolder, 'mTRF_gif/');
mkdir(outfolder_gif); 

load(file_path)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% data available
% 'TRFs', 'CreFac', 'ch_ind_ref', 'Num_Ch_ref', 'ch_list_ref', 
% 'windowsize', 'windowgap','windowNum',
% 'max_allch_ma','max_allch_um','maxind_ma_ave','maxind_ma_ave',
% 'TRFs_match','TRFs_unmatch'
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                                                                               

%% draw figure

xrange = [-50, 350];
yrange = [-7e-4, 10e-4];

numStim = size(TRFs_match,3);

for i = 1:numStim
    for j = 1:numHotCh 
    
        TRF_ma = squeeze(TRFs_match(:,:,i,Hotch(j)));
        TRF_um = squeeze(TRFs_unmatch(:,:,i,Hotch(j)));
        
        figure;
        
        subplot(1,2,1)
        p_ma = plot(nan,nan);
        p_ma.XData = x;
        dim = [.17 .5 .3 .3];
        ano_ma = annotation('textbox',dim,'String',nan,'FitBoxToText','on', 'BackgroundColor','white');
        yline(0); hold on;
        xline(0); hold on;
        title('Matched')
        xlim(xrange)
        xlabel('Time lag (ms)');
        ylim(yrange);
        ylabel('Amplitude (a.u.)')
        grid on;
        
        subplot(1,2,2)
        p_um = plot(nan,nan);
        p_um.XData = x;
        yline(0); hold on;
        xline(0); hold on;
        title('Unmatched')
        xlim(xrange)
        xlabel('Time lag (ms)');
        ylim(yrange);
        ylabel('Amplitude (a.u.)')
        grid on;
        
        sgtitle(sprintf(['%s \n' ...
            'Window size: %ds, gap: %ds, stimuli: %s, channel: %s'], file_name, windowsize, windowgap, stim_tag(i), ch_list_ref{Hotch(j)}),'interpreter', "latex"); 
        filename = strcat(outfolder_gif, "gif_", file_name,".gif");
        
        for l = 1:windowNum 
            
            window_stt = (l-1)*windowgap;
            window_end = (l-1)*windowgap+windowsize;
            
            p_ma.YData = TRF_ma(:,l);
            p_um.YData = TRF_um(:,l);
            ano_ma.String = sprintf('window %d - %d s',window_stt, window_end);
            exportgraphics(gcf,filename,'Append',true);
        
        end
    end
end

